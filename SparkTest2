This test with Spark will access and assess weather data for a particular location in Pennsylvania called Eagles Mere.

(May tie into Yahoo weather API https://www.programmableweb.com/api/yahoo-weather.https://www.weatherbug.com)
(Also Ref: https://www.youtube.com/watch?v=og5h5ppwXgU, https://www.youtube.com/watch?v=pFf5HdlYFq4)
(Storm Data https://www.ncdc.noaa.gov/stormevents/ftp.jsp)
(Installation ideas https://medium.freecodecamp.org/installing-scala-and-apache-spark-on-mac-os-837ae57d283f)

// variables for future forecast days
    private double tempD1, tempD2, tempD3, tempD4;
    private String iconD1, iconD2, iconD3, iconD4;


package weather.spark;

import org.apache.spark.api.java.*;
import org.apache.spark.SparkConf;
import org.apache.spark.api.java.function.Function;

import org.apache.spark.mllib.regression.LabeledPoint;
import org.apache.spark.mllib.linalg.Vectors;
import org.apache.spark.mllib.regression.LinearRegressionModel;
import org.apache.spark.mllib.regression.LinearRegressionWithSGD;
import scala.Tuple2;
import java.io.*;
import org.apache.spark.mllib.regression.LassoModel;
import org.apache.spark.mllib.regression.LassoWithSGD;
import org.apache.spark.mllib.regression.RidgeRegressionModel;
import org.apache.spark.mllib.regression.RidgeRegressionWithSGD;

import static org.apache.spark.sql.functions.concat;
import static org.apache.spark.sql.functions.lit;

import java.util.Properties;

import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.SaveMode;
import org.apache.spark.sql.SparkSession;
	


public class Application 
{	
	public static void main(String args[]) throws InterruptedException 
	{
		SparkSession spark = new SparkSession.Builder()
				.appName("CSV to DB")
				.master("local") 
				.getOrCreate();

		Dataset<Row> df = spark.read().format("csv")
			.option("header", true)
			.load("src/main/resources/stormevents_details-ftp_v1.0_d2010_c20170726.csv"); 

		df = df.withColumn("Snow Fall Prediction", 
				
		
	    df.write()
	    	.mode(SaveMode.Overwrite)
	    	.jdbc(dbConnectionUrl, "project1", prop);
	}
}

import java.util.Scanner;

 public class Weather {
 public static void main(String[] args) {
 final int NUMBER_OF_DAYS = 10;
 final int NUMBER_OF_HOURS = 24;
 double[][][] data
 = new double[NUMBER_OF_DAYS][NUMBER_OF_HOURS][2];

 Scanner input = new Scanner(System.in);
 // Read input using input redirection from a file
 for (int k = 0; k < NUMBER_OF_DAYS * NUMBER_OF_HOURS; k++) {
 int day = input.nextInt();
 int hour = input.nextInt();
 double temperature = input.nextDouble();
 double humidity = input.nextDouble();
 data[day - 1][hour - 1][0] = temperature;
 data[day - 1][hour - 1][1] = humidity;
 }

 // Find the average daily temperature and humidity
 for (int i = 0; i < NUMBER_OF_DAYS; i++) {
 double dailyTemperatureTotal = 0, dailyHumidityTotal = 0;
 for (int j = 0; j < NUMBER_OF_HOURS; j++) {
 dailyTemperatureTotal += data[i][j][0];
 dailyHumidityTotal += data[i][j][1];
 }


 System.out.println("Day " + i + "'s average temperature is "
 + dailyTemperatureTotal / NUMBER_OF_HOURS);
 System.out.println("Day " + i + "'s average humidity is "
 + dailyHumidityTotal / NUMBER_OF_HOURS);
 }
 }
 }
